<html>
<head>
<!--見出しと同じものをタイトルにします-->
<title>連続入出力の手順</title>
<!--META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=shift-jis"-->
<link rel=StyleSheet href=default.css>
</head>
<body>

<!---------------------------------------------------------------------------------
ここにコンテンツを記載
-------------------------------------------------------------------------------->

<!--ページが長くなったときにトップへ戻るジャンプを付ける場合のリンク名です-->
<a name=TOPIC_TOP>
<!-===============================================================================-->
<!-見出し-->
<!-===============================================================================-->
<h1>連続入出力の手順</h1>
<p>
　バスマスタ転送機能を用いて、サンプリング（入力）／ジェネレーティング(出力)する場合の
設定手順を説明します。<br>
<br>
<br>
<h2>■サンプリング／ジェネレーティング条件の設定</h2>
　初期化とモード設定が完了したら、サンプリング／ジェネレーティング条件を設定します。<br>
サンプリング／ジェネレーティング条件には、入出力を開始するための条件
（ソフトスタート、外部スタート等）を設定するスタート条件設定（<a href="DioDmSetStartTrg.htm"">DioDmSetStartTrg</a>）、
入出力を行なうタイミング（内部クロック、外部クロック等）を設定するクロック条件設定
（<a href="DioDmSetClockTrg.htm">DioDmSetClockTrg</a>）、入出力を完了するための条件（ソフトストップ、指定個数停止など）を設定する、
ストップ条件設定（<a href="DioDmSetStopTrg.htm">DioDmSetStopTrg</a>）の３種類があります。<br>
<br>
また、各設定に対して、それを補足する条件設定関数（例：個数指定停止時の個数設定など）があります。<br>
<br>
これらのサンプリング／ジェネレーティング条件設定は、常に同じ条件でデータを入出力する場合には、初期化後に一度行なっておけば、それ以降は同じ条件で動作が行なわれます。
データ転送毎に異なる動作条件で転送を行なう場合には、変更すべき設定のみを、転送開始する前に設定してください。<br>
<br>
サンプリング／ジェネレーティングのパターンは、以下の表の中から選択できます。<br>
<br>
<table border="1" cellspacing="0" cellpadding="2">
<tr bgcolor="#eeeeee">
<th width="60">&nbsp;</th>
<th width="150">スタート条件</th>
<th width="150">クロック条件</th>
<th width="150">ストップ条件</th>
</tr>
<tr><td>種類<br>シンボル</td><td>ソフトウェアスタート<br>DIODM_START_SOFT</td><td>内部クロック<br>DIODM_CLK_CLOCK</td><td>ソフトストップ<br>DIODM_STOP_SOFT</td></tr>
<tr><td>種類<br>シンボル</td><td>外部スタート立上り<br>DIODM_START_EXT_RISE</td><td>外部クロック<br>DIODM_CLK_EXT_TRG</td><td>外部スタート立上り<br>DIODM_STOP_EXT_RISE</td></tr>
<tr><td>種類<br>シンボル</td><td>外部スタート立下り<br>DIODM_START_EXT_FALL</td><td>ハンドシェイク<br>DIODM_CLK_HANDSHAKE</td><td>外部スタート立下り<br>DIODM_STOP_EXT_FALL</td></tr>
<tr><td>種類<br>シンボル</td><td>パターン一致(入力のみ)<br>DIODM_START_PATTERN</td><td>SCコネクタEXTSIG1<br>DIODM_CLK_EXTSIG_1</td><td>SCコネクタEXTSIG1<br>DIODM_STOP_EXTSIG_1</td></tr>
<tr><td>種類<br>シンボル</td><td>SCコネクタEXTSIG1<br>DIODM_START_EXTSIG_1</td><td>SCコネクタEXTSIG2<br>DIODM_CLK_EXTSIG_2</td><td>SCコネクタEXTSIG2<br>DIODM_STOP_EXTSIG_2</td></tr>
<tr><td>種類<br>シンボル</td><td>SCコネクタEXTSIG2<br>DIODM_START_EXTSIG_2</td><td>SCコネクタEXTSIG3<br>DIODM_CLK_EXTSIG_3</td><td>SCコネクタEXTSIG3<br>DIODM_STOP_EXTSIG_3</td></tr>
<tr><td>種類<br>シンボル</td><td>SCコネクタEXTSIG3<br>DIODM_START_EXTSIG_3</td><td>&nbsp;</td><td>&nbsp;</td></tr>
</table>
<br>
<br>
<h2>■リセット</h2>
リセット関数によって、前回の転送時のカウンタ値やFIFO内容をリセットする必要があります(<a href="DioDmReset.htm">DioDmReset</a>)。<br>
<br>
<br>
<h2>■バッファの設定（サンプリング：入力）</h2>
バスマスタ転送は、ボードに転送先のメモリアドレスを設定しておき、転送をスタートするとボードからそのメモリアドレスへデータの転送を行ないます。<br>
従って、転送開始前に入力値を受け取るバッファ領域を、ボードに設定しておかなければなりません（<a href="DioDmSetBuff.htm">DioDmSetBuff</a>）。<br>
<br>
設定したバッファ領域は、物理的に他のアドレスに移動しないようにロックされます。ロックされた領域は、転送完了によってアンロックされます。アンロックされた領域に対する転送は危険ですので、バッファの設定は転送を行なう毎にかならず行なわなければなりません。<br>
<br>
バッファ領域をヒープやスタックなどに取った場合、この領域は転送が完了するまで、開放されないようにしなければなりません。転送完了までにバッファ領域が開放されてしまった場合、その領域は他の処理に使用されます。<br>
他の処理に使用されている領域にデータ転送が行なわれると、プログラムが例外を発生してしまう可能性があります。<br>
プログラムの安全性を重視するのであれば、バスマスタ転送に使用する領域は、グローバルな領域を使用することをお勧めします。<br>
<br>
転送時の動作としては、バッファ内にデータを全部転送した時点で転送を完了する１回転送と、同じバッファ領域に対して無限回数繰り返してデータを転送する無限転送を用意しています。<br>
<br>
<br>
<h2>■バッファの設定（ジェネレーティング：出力）</h2>
バスマスタ転送は、ハードウェアに転送元のメモリアドレスを設定しておき、ジェネレーティングを実行する前にそのメモリアドレスからボード内のFIFOにデータの転送を行なっておきます。<br>
出力を行なう場合は、出力データを格納したバッファ領域を、ハードウェアに設定しておかなければなりません（<a href="DioDmSetBuff.htm">DioDmSetBuff</a>）。<br>
<br>
設定したバッファ領域は、物理的に他のアドレスに移動しないようにロックされます。ロックされた領域は、転送完了によってアンロックされます。バッファの設定は転送を行なう毎にかならず行なわなければなりません。<br>
<br>
バッファ領域をヒープやスタックなどに取った場合、この領域は転送が完了するまで、開放されないようにしなければなりません。転送完了までにバッファ領域が開放されてしまった場合、その領域は他の処理に使用され、出力したいデータ以外のデータが書き込まれます。そのままの状態で転送が行なわれると、予期せぬデータを出力してしまう可能性があります。<br>
プログラムの安全性を重視するのであれば、バスマスタ転送に使用する領域は、グローバルな領域を使用することをお勧めします。<br>
<br>
転送時の動作として、バッファ内のデータを全部転送した時点で転送を完了する１回転送と、同じバッファ領域に対して無限回数繰り返してデータを転送する無限転送を用意しています。<br>
同一データを指定回数だけ繰返して転送したい場合、その回数分のサイズのバッファを用意して、１回転送を使用してください。<br>
<br>
<br>
<h2>■スタート</h2>
　サンプリング／ジェネレーティング条件を設定し、バッファを設定したら、動作をスタートします（<a href="DioDmStart.htm">DioDmStart</a>）。<br>
動作をスタートすると、スタート条件が満たされた時点でサンプリング／ジェネレーティングが開始され、ストップ条件が満たされた時点でサンプリング／ジェネレーティングが終了します。ソフトウェアスタートにした場合、DioDmStart関数を呼び出したタイミングで、サンプリング／ジェネレーティングが開始されます。<br>
<br>
入力データは、一旦ボード内のFIFOに蓄えられ、バスが空いたタイミングを利用して、アプリケーション中のメモリに転送されます。<br>
<br>
出力データは、直ちにボード内のFIFOに送られ、クロック条件が成立した時点で外部に出力されます。<br>
<br>
<br>
<h2>■ストップ／転送完了</h2>
　ストップ条件が満たされると、サンプリング／ジェネレーティングが終了します。<br>
　アプリケーションから動作の終了を捕らえるには、ステータスを監視する方法（<a href="DioDmGetStatus.htm" title="DioDmGetStatus">DioDmGetStatus</a>）と、メッセージによって終了を確認する方法（<a href="DioDmSetStopEvent.htm">DioDmSetStopEvent</a>）の２つが用意されています。
　動作途中で、転送数を確認して（<a href="DioDmGetCount.htm">DioDmGetCount</a>）、処理を行なうこともできます。サンプリング／ジェネレーティングが終了すると、ロックされていたバッファ領域がアンロックされます。<br>
<br>
<!---------------------------------------------------------------------------------
コンテンツここまで
-------------------------------------------------------------------------------->
</BODY>
</HTML>





